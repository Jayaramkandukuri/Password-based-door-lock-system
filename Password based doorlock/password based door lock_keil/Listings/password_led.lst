C51 COMPILER V9.60.0.0   PASSWORD_LED                                                      08/04/2023 12:26:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PASSWORD_LED
OBJECT MODULE PLACED IN .\Objects\password_led.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE password_led.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\password_led.lst) TABS(2) OBJECT(.\Objects\password_led.obj)

line level    source

   1          #include <regx51.h>
   2          #include "lcd.h"
   3          #include "keypad.h"
   4          #include "Led.h"
   5          #include "dc_motor.h"
   6          #include "sounder.h"
   7          
   8          unsigned char dum[5], pass[5] = "1234";
   9          unsigned char option = '0';
  10          int a = 0, b;
  11          char s;
  12          
  13          void function() {
  14   1          while (1) {
  15   2              sounder_init();
  16   2              led_init();
  17   2              lcd_init();
  18   2      
  19   2              lcd_cmd(0x01);
  20   2              lcd_cmd(0x80);
  21   2              lcd_string("Enter code:");
  22   2      
  23   2              while (key_interrupt());
  24   2              b = 0xc0;
  25   2              lcd_cmd(b);
  26   2      
  27   2              while (a < 4) {
  28   3                  s = get_key();
  29   3                  dum[a] = s;
  30   3                  lcd_data('*');
  31   3                  a++;
  32   3              }
  33   2      
  34   2              dum[a] = '\0';
  35   2              a = 0;
  36   2      
  37   2              if ((dum[0] == pass[0]) && (dum[1] == pass[1]) && (dum[2] == pass[2]) && (dum[3] == pass[3])) {
  38   3                  lcd_cmd(0x01);
  39   3                  lcd_cmd(0x80);
  40   3                  led_on1();
  41   3                  lcd_string("valid code");
  42   3                  delay(250);
  43   3                  lcd_cmd(0x01);
  44   3                  lcd_cmd(0x80);
  45   3                  lcd_string("1 Open  2 Close");
  46   3                  lcd_cmd(0xc0);
  47   3                  lcd_string("3 Change code");
  48   3                  led_off1();
  49   3      
  50   3                  lcd_cmd(0xd4);
  51   3                      option = get_key(); // Wait for user input
  52   3                  if (option == '1') {
  53   4                      // Code to open and close the door
  54   4                      lcd_cmd(0x01);
C51 COMPILER V9.60.0.0   PASSWORD_LED                                                      08/04/2023 12:26:51 PAGE 2   

  55   4                      lcd_cmd(0x80);
  56   4                      lcd_string("Door is opening");
  57   4                      motor_rotate_right();
  58   4                      delay(1000);
  59   4                      motor_init();
  60   4                      lcd_cmd(0x01);
  61   4                      lcd_cmd(0x80);
  62   4                      lcd_string("Door is opened");
  63   4                      delay(1000);
  64   4                      lcd_cmd(0x01);
  65   4                      lcd_cmd(0x80);
  66   4                      lcd_string("Door is Closing");
  67   4                      motor_rotate_left();
  68   4                      delay(1000);
  69   4                      motor_init();
  70   4                      lcd_cmd(0x01);
  71   4                      lcd_cmd(0x80);
  72   4                      lcd_string("Door is Closed");
  73   4                      delay(1000);
  74   4                  } else if (option == '2') {
  75   4                      // Code to close the door
  76   4                      lcd_cmd(0x01);
  77   4                      lcd_cmd(0x80);
  78   4                      lcd_string("Door is Closing");
  79   4                      motor_rotate_left();
  80   4                      delay(1000);
  81   4                      motor_init();
  82   4                      lcd_cmd(0x01);
  83   4                      lcd_cmd(0x80);
  84   4                      lcd_string("Door is Closed");
  85   4                      delay(1000);
  86   4                  } else if (option == '3') {
  87   4                      // Code to change the code
  88   4                      lcd_cmd(0x01);
  89   4                      lcd_cmd(0x80);
  90   4                      lcd_string("Enter old code:");
  91   4                      while (key_interrupt());
  92   4                      b = 0xc0;
  93   4                      lcd_cmd(b);
  94   4      
  95   4                      while (a < 4) {
  96   5                          s = get_key();
  97   5                          dum[a] = s;
  98   5                          lcd_data('*');
  99   5                          a++;
 100   5                      }
 101   4      
 102   4                      dum[a] = '\0';
 103   4                      a = 0;
 104   4      
 105   4                      if ((dum[0] == pass[0]) && (dum[1] == pass[1]) && (dum[2] == pass[2]) && (dum[3] == pass[3
             -])) {
 106   5                          lcd_cmd(0x01);
 107   5                          lcd_cmd(0x80);
 108   5                          lcd_string("Enter new code:");
 109   5                          while (key_interrupt());
 110   5                          b = 0xc0;
 111   5                          lcd_cmd(b);
 112   5      
 113   5                          while (a < 4) {
 114   6                              s = get_key();
 115   6                              pass[a] = s;
C51 COMPILER V9.60.0.0   PASSWORD_LED                                                      08/04/2023 12:26:51 PAGE 3   

 116   6                              lcd_data('*');
 117   6                              a++;
 118   6                          }
 119   5      
 120   5                          pass[a] = '\0';
 121   5                          a = 0;
 122   5      
 123   5                          lcd_cmd(0x01);
 124   5                          lcd_cmd(0x80);
 125   5                          lcd_string("Code changed");
 126   5                          delay(1000);
 127   5                      } else {
 128   5                          lcd_cmd(0x01);
 129   5                          lcd_cmd(0x80);
 130   5                          lcd_string("Invalid old code");
 131   5                          delay(1000);
 132   5                      }
 133   4                  } else {
 134   4                      lcd_cmd(0x01);
 135   4                      lcd_cmd(0x80);
 136   4                      lcd_string("Wrong selection");
 137   4                      lcd_cmd(0x01);
 138   4                      lcd_cmd(0x80);
 139   4                      lcd_string("Try Again");
 140   4                      delay(500);
 141   4                  }
 142   3              } else {
 143   3                  lcd_cmd(0x01);
 144   3                  lcd_cmd(0x80);
 145   3                  led_on2();
 146   3                  sounder_on();
 147   3                  lcd_string("Invalid code");
 148   3                  lcd_cmd(0xc0);
 149   3                  lcd_string("Access Denied");
 150   3                  delay(1000);
 151   3                  sounder_off();
 152   3                  led_off2();
 153   3              }
 154   2              option = '0'; // Reset the option value for the next iteration
 155   2          }
 156   1      }
 157          void main(){
 158   1        while(1){
 159   2          function();
 160   2        }
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1093    ----
   CONSTANT SIZE    =    230    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28      39
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
